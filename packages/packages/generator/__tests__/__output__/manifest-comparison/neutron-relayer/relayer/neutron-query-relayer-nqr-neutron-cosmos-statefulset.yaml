apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: neutron-query-relayer-nqr-neutron-cosmos
  labels:
    starship.io/name: starship-e2e-tests
    app.kubernetes.io/version: 4.0.0-alpha.0
    app.kubernetes.io/managed-by: starship
    app.kubernetes.io/component: relayer
    app.kubernetes.io/part-of: starship
    app.kubernetes.io/role: neutron-query-relayer
    app.kubernetes.io/name: neutron-query-relayer-nqr-neutron-cosmos
spec:
  serviceName: neutron-query-relayer-nqr-neutron-cosmos
  replicas: 1
  podManagementPolicy: Parallel
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: relayer
      app.kubernetes.io/type: neutron-query-relayer
      app.kubernetes.io/name: neutron-query-relayer-nqr-neutron-cosmos
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: relayer
        app.kubernetes.io/type: neutron-query-relayer
        app.kubernetes.io/name: neutron-query-relayer-nqr-neutron-cosmos
        app.kubernetes.io/rawname: nqr-neutron-cosmos
        app.kubernetes.io/version: 4.0.0-alpha.0
    spec:
      initContainers:
        - name: wait-for-chains
          image: curlimages/curl:latest
          imagePullPolicy: IfNotPresent
          env:
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/sh
            - '-c'
            - |-

              while [ $(curl -sw '%{http_code}' http://neutron-1-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id -o /dev/null) -ne 200 ]; do
                echo "Genesis validator does not seem to be ready for: neutron-1. Waiting for it to start..."
                echo "Checking: http://neutron-1-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id"
                sleep 10;
              done

              while [ $(curl -sw '%{http_code}' http://cosmoshub-4-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id -o /dev/null) -ne 200 ]; do
                echo "Genesis validator does not seem to be ready for: cosmoshub-4. Waiting for it to start..."
                echo "Checking: http://cosmoshub-4-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id"
                sleep 10;
              done
              echo "Ready to start"
              exit 0
          resources:
            limits:
              cpu: '0.1'
              memory: 100M
            requests:
              cpu: '0.1'
              memory: 100M
        - name: init-relayer
          image: ghcr.io/cosmology-tech/starship/neutron-query-relayer:v0.2.0
          imagePullPolicy: IfNotPresent
          env:
            - name: KEYS_CONFIG
              value: /keys/keys.json
            - name: RELAYER_INDEX
              value: ${HOSTNAME##*-}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_PATH
              value: /configs/config.json
            - name: STORAGE_PATH
              value: ./storage
            - name: LOG_LEVEL
              value: info
            - name: METRICS_PORT
              value: '9090'
          command:
            - bash
            - '-c'
          args:
            - |
              set -ux

              RLY_INDEX=${HOSTNAME##*-}
              echo "Relayer Index: $RLY_INDEX"

              mkdir -p $STORAGE_PATH

              NEUTRON_MNEMONIC=$(jq -r ".relayers[$RLY_INDEX].mnemonic" $KEYS_CONFIG)
              TARGET_MNEMONIC=$(jq -r ".relayers[$RLY_INDEX].mnemonic" $KEYS_CONFIG)


              echo "Setting up keys for neutron-1..."
              # Keys will be managed through environment variables for neutron-query-relayer

              DENOM="untrn"
              # For neutron-query-relayer, we need to derive the address from mnemonic
              # This will be handled by the relayer binary itself

              echo "Chain neutron-1 setup completed"

              echo "Setting up keys for cosmoshub-4..."
              # Keys will be managed through environment variables for neutron-query-relayer

              DENOM="uatom"
              # For neutron-query-relayer, we need to derive the address from mnemonic
              # This will be handled by the relayer binary itself

              echo "Chain cosmoshub-4 setup completed"
          resources:
            limits:
              cpu: '0.2'
              memory: 200M
            requests:
              cpu: '0.2'
              memory: 200M
          volumeMounts:
            - mountPath: /root
              name: relayer
            - mountPath: /configs
              name: relayer-config
            - mountPath: /keys
              name: keys
            - mountPath: /scripts
              name: scripts
      containers:
        - name: relayer
          image: ghcr.io/cosmology-tech/starship/neutron-query-relayer:v0.2.0
          imagePullPolicy: IfNotPresent
          env:
            - name: KEYS_CONFIG
              value: /keys/keys.json
            - name: RELAYER_INDEX
              value: ${HOSTNAME##*-}
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: CONFIG_PATH
              value: /configs/config.json
            - name: STORAGE_PATH
              value: ./storage
            - name: LOG_LEVEL
              value: info
            - name: METRICS_PORT
              value: '9090'
          command:
            - bash
            - '-c'
          args:
            - |-
              RLY_INDEX=${HOSTNAME##*-}
              echo "Relayer Index: $RLY_INDEX"
              neutron-query-relayer start --config /configs/config.json
          resources:
            limits:
              cpu: '0.2'
              memory: 200M
            requests:
              cpu: '0.2'
              memory: 200M
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          volumeMounts:
            - mountPath: /root
              name: relayer
            - mountPath: /configs
              name: relayer-config
      volumes:
        - name: relayer
          emptyDir: {}
        - name: relayer-config
          configMap:
            name: neutron-query-relayer-nqr-neutron-cosmos
        - name: keys
          configMap:
            name: keys
        - name: scripts
          configMap:
            name: setup-scripts
