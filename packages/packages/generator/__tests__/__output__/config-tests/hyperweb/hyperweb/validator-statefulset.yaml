apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: test-hyperweb-1-validator
  labels:
    starship.io/name: starship-e2e-tests
    app.kubernetes.io/version: 4.0.0-alpha.1
    app.kubernetes.io/managed-by: starship
    app.kubernetes.io/component: chain
    app.kubernetes.io/part-of: test-hyperweb-1
    app.kubernetes.io/id: test-hyperweb-1
    app.kubernetes.io/name: test-hyperweb-1-validator
    app.kubernetes.io/type: test-hyperweb-1-statefulset
    app.kubernetes.io/role: validator
    starship.io/chain-name: hyperweb
spec:
  serviceName: test-hyperweb-1-validator
  podManagementPolicy: Parallel
  replicas: 1
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/instance: starship-e2e-tests
      app.kubernetes.io/name: test-hyperweb-1-validator
  template:
    metadata:
      annotations:
        quality: release
        role: api-gateway
        sla: high
        tier: gateway
      labels:
        app.kubernetes.io/instance: starship-e2e-tests
        app.kubernetes.io/type: test-hyperweb-1
        app.kubernetes.io/name: test-hyperweb-1-validator
        app.kubernetes.io/version: 4.0.0-alpha.1
        app.kubernetes.io/role: validator
    spec:
      initContainers:
        - name: wait-for-chains
          image: curlimages/curl:latest
          imagePullPolicy: Always
          env:
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          command:
            - /bin/sh
            - '-c'
            - |2-

                    while [ $(curl -sw '%{http_code}' http://test-hyperweb-1-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id -o /dev/null) -ne 200 ]; do
                      echo "Genesis validator does not seem to be ready for: test-hyperweb-1. Waiting for it to start..."
                      echo "Checking: http://test-hyperweb-1-genesis.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id"
                      sleep 10;
                    done
              echo "Ready to start"
              exit 0
          resources:
            limits:
              cpu: '0.1'
              memory: 128M
            requests:
              cpu: '0.1'
              memory: 128M
        - name: init-validator
          image: ghcr.io/hyperweb-io/hyperweb:latest
          imagePullPolicy: Always
          env:
            - name: DENOM
              value: uhyper
            - name: COINS
              value: >-
                100000000000000uhyper,100000000000000uhypweb,100000000000000uatom,100000000000000uusdc
            - name: CHAIN_BIN
              value: hyperd
            - name: CHAIN_DIR
              value: /root/.hyperd
            - name: CODE_REPO
              value: https://github.com/hyperweb-io/hyperweb
            - name: DAEMON_HOME
              value: /root/.hyperd
            - name: DAEMON_NAME
              value: hyperd
            - name: CHAIN_ID
              value: test-hyperweb-1
            - name: GENESIS_HOST
              value: test-hyperweb-1-genesis
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KEYS_CONFIG
              value: /configs/keys.json
            - name: FAUCET_ENABLED
              value: 'true'
            - name: METRICS
              value: 'false'
          command:
            - bash
            - '-c'
            - >-
              VAL_INDEX=${HOSTNAME##*-}

              echo "Validator Index: $VAL_INDEX"



              if [ -f $CHAIN_DIR/config/genesis.json ]; then
                echo "Genesis file exists, exiting early"
                exit 0
              fi


              VAL_NAME=$(jq -r ".validators[0].name" $KEYS_CONFIG)-$VAL_INDEX

              echo "Validator Index: $VAL_INDEX, Key name: $VAL_NAME"


              echo "Recover validator $VAL_NAME"

              $CHAIN_BIN init $VAL_NAME --chain-id $CHAIN_ID

              jq -r ".validators[0].mnemonic" $KEYS_CONFIG | $CHAIN_BIN keys add
              $VAL_NAME --index $VAL_INDEX --recover --keyring-backend="test"


              curl
              http://$GENESIS_HOST.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/genesis
              -o $CHAIN_DIR/config/genesis.json

              echo "Genesis file that we got....."

              cat $CHAIN_DIR/config/genesis.json


              echo "Create node id json file"

              NODE_ID=$($CHAIN_BIN tendermint show-node-id)

              echo '{"node_id":"'$NODE_ID'"}' > $CHAIN_DIR/config/node_id.json
          resources:
            limits:
              cpu: '0.5'
              memory: 500M
            requests:
              cpu: '0.5'
              memory: 500M
          volumeMounts:
            - mountPath: /root/.hyperd
              name: node
            - mountPath: /configs
              name: addresses
            - mountPath: /scripts
              name: scripts
        - name: init-config
          image: ghcr.io/hyperweb-io/hyperweb:latest
          imagePullPolicy: Always
          env:
            - name: DENOM
              value: uhyper
            - name: COINS
              value: >-
                100000000000000uhyper,100000000000000uhypweb,100000000000000uatom,100000000000000uusdc
            - name: CHAIN_BIN
              value: hyperd
            - name: CHAIN_DIR
              value: /root/.hyperd
            - name: CODE_REPO
              value: https://github.com/hyperweb-io/hyperweb
            - name: DAEMON_HOME
              value: /root/.hyperd
            - name: DAEMON_NAME
              value: hyperd
            - name: CHAIN_ID
              value: test-hyperweb-1
            - name: GENESIS_HOST
              value: test-hyperweb-1-genesis
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KEYS_CONFIG
              value: /configs/keys.json
            - name: METRICS
              value: 'false'
          command:
            - bash
            - '-c'
            - >-
              VAL_INDEX=${HOSTNAME##*-}

              echo "Validator Index: $VAL_INDEX"



              echo "Running setup config script..."

              bash -e /scripts/update-config.sh


              curl -s
              http://$GENESIS_HOST.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id

              NODE_ID=$(curl -s
              http://$GENESIS_HOST.$NAMESPACE.svc.cluster.local:$GENESIS_PORT/node_id
              | jq -r ".node_id")

              if [[ $NODE_ID == "" ]]; then
                echo "Node ID is null, exiting early"
                exit 1
              fi


              GENESIS_NODE_P2P=$NODE_ID@$GENESIS_HOST.$NAMESPACE.svc.cluster.local:26656

              echo "Node P2P: $GENESIS_NODE_P2P"

              sed -i "s/persistent_peers = \"\"/persistent_peers =
              \"$GENESIS_NODE_P2P\"/g" $CHAIN_DIR/config/config.toml


              echo "Printing the whole config.toml file"

              cat $CHAIN_DIR/config/config.toml
          resources:
            limits:
              cpu: '0.5'
              memory: 500M
            requests:
              cpu: '0.5'
              memory: 500M
          volumeMounts:
            - mountPath: /root/.hyperd
              name: node
            - mountPath: /configs
              name: addresses
            - mountPath: /scripts
              name: scripts
      containers:
        - name: validator
          image: ghcr.io/hyperweb-io/hyperweb:latest
          imagePullPolicy: Always
          env:
            - name: DENOM
              value: uhyper
            - name: COINS
              value: >-
                100000000000000uhyper,100000000000000uhypweb,100000000000000uatom,100000000000000uusdc
            - name: CHAIN_BIN
              value: hyperd
            - name: CHAIN_DIR
              value: /root/.hyperd
            - name: CODE_REPO
              value: https://github.com/hyperweb-io/hyperweb
            - name: DAEMON_HOME
              value: /root/.hyperd
            - name: DAEMON_NAME
              value: hyperd
            - name: CHAIN_ID
              value: test-hyperweb-1
            - name: GENESIS_HOST
              value: test-hyperweb-1-genesis
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KEYS_CONFIG
              value: /configs/keys.json
            - name: SLOGFILE
              value: slog.slog
          command:
            - bash
            - '-c'
            - |-
              set -eux
              START_ARGS=""


              # Starting the chain

              $CHAIN_BIN start $START_ARGS
          resources:
            limits:
              cpu: '0.5'
              memory: 500M
            requests:
              cpu: '0.5'
              memory: 500M
          volumeMounts:
            - mountPath: /root/.hyperd
              name: node
            - mountPath: /configs
              name: addresses
            - mountPath: /scripts
              name: scripts
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - '-c'
                  - '-e'
                  - >-
                    until bash -e /scripts/chain-rpc-ready.sh
                    http://localhost:26657; do
                      sleep 10
                    done


                    set -eux

                    export

                    VAL_INDEX=${HOSTNAME##*-}

                    VAL_NAME="$(jq -r ".validators[0].name"
                    $KEYS_CONFIG)-$VAL_INDEX"

                    echo "Validator Index: $VAL_INDEX, Key name: $VAL_NAME.
                    Chain bin $CHAIN_BIN"


                    VAL_ADDR=$($CHAIN_BIN keys show $VAL_NAME -a
                    --keyring-backend="test")

                    echo "Transfer tokens to address $VAL_ADDR before trying to
                    create validator. Best effort"

                    bash -e /scripts/transfer-tokens.sh \
                      $VAL_ADDR \
                      $DENOM \
                      http://$GENESIS_HOST.$NAMESPACE.svc.cluster.local:8000/credit \
                      "true" || true

                    $CHAIN_BIN keys list --keyring-backend test | jq

                    VAL_NAME=$VAL_NAME bash -e /scripts/create-validator.sh
          readinessProbe:
            exec:
              command:
                - bash
                - '-e'
                - /scripts/chain-rpc-ready.sh
                - http://localhost:26657
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 15
        - name: exposer
          image: ghcr.io/cosmology-tech/starship/exposer:latest
          imagePullPolicy: Always
          env:
            - name: DENOM
              value: uhyper
            - name: COINS
              value: >-
                100000000000000uhyper,100000000000000uhypweb,100000000000000uatom,100000000000000uusdc
            - name: CHAIN_BIN
              value: hyperd
            - name: CHAIN_DIR
              value: /root/.hyperd
            - name: CODE_REPO
              value: https://github.com/hyperweb-io/hyperweb
            - name: DAEMON_HOME
              value: /root/.hyperd
            - name: DAEMON_NAME
              value: hyperd
            - name: CHAIN_ID
              value: test-hyperweb-1
            - name: GENESIS_HOST
              value: test-hyperweb-1-genesis
            - name: GENESIS_PORT
              value: '8081'
            - name: NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: EXPOSER_HTTP_PORT
              value: '8081'
            - name: EXPOSER_GRPC_PORT
              value: '9099'
            - name: EXPOSER_GENESIS_FILE
              value: /root/.hyperd/config/genesis.json
            - name: EXPOSER_MNEMONIC_FILE
              value: /configs/keys.json
            - name: EXPOSER_PRIV_VAL_FILE
              value: /root/.hyperd/config/priv_validator_key.json
            - name: EXPOSER_NODE_KEY_FILE
              value: /root/.hyperd/config/node_key.json
            - name: EXPOSER_PRIV_VAL_STATE_FILE
              value: /root/.hyperd/data/priv_validator_state.json
          command:
            - exposer
          resources:
            limits:
              cpu: '0.1'
              memory: 128M
            requests:
              cpu: '0.1'
              memory: 128M
          volumeMounts:
            - mountPath: /root/.hyperd
              name: node
            - mountPath: /configs
              name: addresses
      volumes:
        - name: node
          emptyDir: {}
        - name: addresses
          configMap:
            name: keys
        - name: scripts
          configMap:
            name: setup-scripts-test-hyperweb-1
        - name: faucet
          emptyDir: {}
